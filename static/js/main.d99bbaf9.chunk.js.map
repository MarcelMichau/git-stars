{"version":3,"sources":["gitStarsApp.js","constants/actionTypes.js","actions.js","services/githubService.js","sagas.js","store/configureStore.js","components/AppNavBar.js","components/SearchInput.js","components/SearchInputContainer.js","components/GithubAvatar.js","components/InputWithAvatar.js","components/LoadingIndicator.js","components/LazyComponent.js","components/Stars.js","components/StarsContainer.js","App.js","index.js","registerServiceWorker.js"],"names":["initialState","username","avatarUrl","isLoading","currentPage","repos","gitStarsApp","state","action","type","value","avatar","requestRepos","githubApi","axios","create","baseURL","headers","Accept","getUserStarredRepos","pageCount","a","get","getUserAvatar","fetchRepos","fetchAvatar","loadMoreRepos","rootSaga","select","call","result","put","data","console","log","avatar_url","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","NavbarMenuItem","label","to","activeOnlyWhenExact","path","exact","children","match","Menu","Item","as","Link","active","name","AppNavBar","header","SearchInput","resetSearch","updateUser","onSearch","updateAvatar","Form","onSubmit","event","preventDefault","Field","placeholder","onChange","target","Button","primary","content","icon","labelPosition","mapDispatchToProps","SearchInputContainer","connect","ownProps","GithubAvatar","Image","src","size","circular","InputWithAvatar","Container","Grid","Row","centered","Column","width","LoadingIndicator","style","boxSizing","display","WebkitFlex","flex","WebkitFlexDirection","flexDirection","WebkitFlexWrap","flexWrap","WebkitFlexGrow","flexGrow","WebkitFlexShrink","flexShrink","WebkitFlexBasis","flexBasis","height","WebkitAlignItems","alignItems","WebkitJustifyContent","justifyContent","color","LazyComponent","opts","Loadable","loading","delay","StarredGrid","loader","starsStyles","loadMoreButton","margin","marginTop","center","Stars","hasMoreThanDefaultNumberOfRepos","length","starredRepos","onClick","StarsContainer","About","App","component","Component","ReactDOM","render","document","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.d99bbaf9.chunk.js","sourcesContent":["import * as actionTypes from './constants/actionTypes';\r\n\r\nconst initialState = {\r\n\tusername: '',\r\n\tavatarUrl: '',\r\n\tisLoading: false,\r\n\tcurrentPage: 1,\r\n\trepos: []\r\n};\r\n\r\nfunction gitStarsApp(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.CLEAN_STATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trepos: [],\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.UPDATE_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusername: action.value\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.LOAD_MORE_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: state.currentPage + 1\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.REQUEST_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.RECEIVE_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\trepos: [...state.repos, ...action.repos]\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.REQUEST_AVATAR:\r\n\t\t\treturn state;\r\n\r\n\t\tcase actionTypes.RECEIVE_AVATAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tavatarUrl: action.avatar\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default gitStarsApp;\r\n","export const CLEAN_STATE = 'CLEAN_STATE';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const LOAD_MORE_REPOS = 'LOAD_MORE_REPOS';\r\nexport const REQUEST_REPOS = 'REQUEST_REPOS';\r\nexport const RECEIVE_REPOS = 'RECEIVE_REPOS';\r\nexport const REQUEST_AVATAR = 'REQUEST_AVATAR';\r\nexport const RECEIVE_AVATAR = 'RECEIVE_AVATAR';\r\n","import * as actionTypes from './constants/actionTypes';\r\n\r\nexport const cleanState = value => ({\r\n\ttype: actionTypes.CLEAN_STATE\r\n});\r\n\r\nexport const updateUsername = value => ({\r\n\ttype: actionTypes.UPDATE_USER,\r\n\tvalue\r\n});\r\n\r\nexport const loadMoreRepos = username => ({\r\n\ttype: actionTypes.LOAD_MORE_REPOS,\r\n\tvalue: username\r\n});\r\n\r\nexport const requestRepos = username => ({\r\n\ttype: actionTypes.REQUEST_REPOS,\r\n\tvalue: username\r\n});\r\n\r\nexport const receiveRepos = (username, repos) => ({\r\n\ttype: actionTypes.RECEIVE_REPOS,\r\n\trepos: repos\r\n});\r\n\r\nexport const requestAvatar = username => ({\r\n\ttype: actionTypes.REQUEST_AVATAR,\r\n\tvalue: username\r\n});\r\n\r\nexport const receiveAvatar = (username, avatar) => ({\r\n\ttype: actionTypes.RECEIVE_AVATAR,\r\n\tavatar: avatar.avatar_url\r\n});\r\n","import axios from 'axios';\r\n\r\nconst githubApi = axios.create({\r\n\tbaseURL: 'https://api.github.com/',\r\n\theaders: { Accept: 'application/vnd.github.v3.star+json' }\r\n});\r\n\r\nexport const getUserStarredRepos = async (username, pageCount) =>\r\n\tawait githubApi.get(`users/${username}/starred?page=${pageCount}`);\r\n\r\nexport const getUserAvatar = async username =>\r\n\tawait githubApi.get(`users/${username}`);\r\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\r\nimport * as actionTypes from './constants/actionTypes';\r\nimport { requestRepos, receiveRepos, receiveAvatar } from './actions';\r\nimport { getUserStarredRepos, getUserAvatar } from './services/githubService';\r\n\r\nfunction* fetchRepos(action) {\r\n\ttry {\r\n\t\tconst state = yield select();\r\n\t\tconst result = yield call(\r\n\t\t\tgetUserStarredRepos,\r\n\t\t\taction.value,\r\n\t\t\tstate.currentPage\r\n\t\t);\r\n\t\tyield put(receiveRepos(action.value, result.data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nfunction* fetchAvatar(action) {\r\n\ttry {\r\n\t\tconst result = yield call(getUserAvatar, action.value);\r\n\t\tyield put(receiveAvatar(action.value, result.data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\nfunction* loadMoreRepos(action) {\r\n\ttry {\r\n\t\tyield put(requestRepos(action.value));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield takeLatest(actionTypes.REQUEST_REPOS, fetchRepos);\r\n\tyield takeLatest(actionTypes.REQUEST_AVATAR, fetchAvatar);\r\n\tyield takeLatest(actionTypes.LOAD_MORE_REPOS, loadMoreRepos);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport gitStarsApp from '../gitStarsApp';\r\nimport rootSaga from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n\tgitStarsApp,\r\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nconst NavbarMenuItem = ({ label, to, activeOnlyWhenExact }) => (\r\n\t<Route\r\n\t\tpath={to}\r\n\t\texact={activeOnlyWhenExact}\r\n\t\tchildren={({ match }) => (\r\n\t\t\t<Menu.Item as={Link} to={to} active={match ? true : false} name={label}>\r\n\t\t\t\t{label}\r\n\t\t\t</Menu.Item>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nconst AppNavBar = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item header>Git Stars</Menu.Item>\r\n\t\t<NavbarMenuItem activeOnlyWhenExact={true} to=\"/\" label=\"Home\" />\r\n\t\t<NavbarMenuItem to=\"/about\" label=\"About\" />\r\n\t</Menu>\r\n);\r\n\r\nexport default AppNavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst SearchInput = ({\r\n\tresetSearch,\r\n\tusername,\r\n\tupdateUser,\r\n\tonSearch,\r\n\tupdateAvatar\r\n}) => {\r\n\tconst handleChange = event => {\r\n\t\tupdateUser(event.target.value);\r\n\t};\r\n\r\n\tconst submitForm = event => {\r\n\t\tevent.preventDefault();\r\n\t\tresetSearch();\r\n\t\tonSearch(username);\r\n\t\tupdateAvatar(username);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={submitForm}>\r\n\t\t\t<Form.Field>\r\n\t\t\t\t<label>Github Username</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"github-username\"\r\n\t\t\t\t\tplaceholder=\"Enter your Github Username\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Field>\r\n\t\t\t<Button\r\n\t\t\t\tprimary\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tcontent=\"Search GitHub\"\r\n\t\t\t\ticon=\"search\"\r\n\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t/>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nSearchInput.propTypes = {\r\n\tresetSearch: PropTypes.func.isRequired,\r\n\tusername: PropTypes.string.isRequired,\r\n\tupdateUser: PropTypes.func.isRequired,\r\n\tonSearch: PropTypes.func.isRequired,\r\n\tupdateAvatar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import { connect } from 'react-redux';\r\nimport SearchInput from './SearchInput';\r\nimport {\r\n\tcleanState,\r\n\tupdateUsername,\r\n\trequestRepos,\r\n\trequestAvatar\r\n} from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tusername: state.username\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tresetSearch: cleanState,\r\n\tupdateUser: updateUsername,\r\n\tonSearch: requestRepos,\r\n\tupdateAvatar: requestAvatar\r\n};\r\n\r\nconst SearchInputContainer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SearchInput);\r\n\r\nexport default SearchInputContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'semantic-ui-react';\r\n\r\nconst GithubAvatar = ({ avatarUrl }) => (\r\n\t<span>{avatarUrl && <Image src={avatarUrl} size=\"tiny\" circular />}</span>\r\n);\r\n\r\nGithubAvatar.propTypes = {\r\n\tavatarUrl: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GithubAvatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchInputContainer from './SearchInputContainer';\r\nimport GithubAvatar from './GithubAvatar';\r\nimport { Container, Grid } from 'semantic-ui-react';\r\n\r\nconst InputWithAvatar = ({ avatarUrl }) => (\r\n\t<Container>\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row centered>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<SearchInputContainer />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={2}>\r\n\t\t\t\t\t<GithubAvatar avatarUrl={avatarUrl} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t</Container>\r\n);\r\n\r\nInputWithAvatar.propTypes = {\r\n\tavatarUrl: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InputWithAvatar;\r\n","import React from 'react';\r\nimport { SyncLoader } from 'halogenium';\r\n\r\nconst LoadingIndicator = () => {\r\n\tconst color = '#2185D0';\r\n\r\n\tconst style = {\r\n\t\tdisplay: 'flex',\r\n\t\tWebkitFlex: '0 1 auto',\r\n\t\tflex: '0 1 auto',\r\n\t\tWebkitFlexDirection: 'column',\r\n\t\tflexDirection: 'column',\r\n\t\tWebkitFlexGrow: 1,\r\n\t\tflexGrow: 1,\r\n\t\tWebkitFlexShrink: 0,\r\n\t\tflexShrink: 0,\r\n\t\tWebkitFlexBasis: '25%',\r\n\t\tflexBasis: '25%',\r\n\t\theight: '200px',\r\n\t\tWebkitAlignItems: 'center',\r\n\t\talignItems: 'center',\r\n\t\tWebkitJustifyContent: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tboxSizing: 'border-box',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tWebkitFlex: '0 1 auto',\r\n\t\t\t\tflex: '0 1 auto',\r\n\t\t\t\tWebkitFlexDirection: 'row',\r\n\t\t\t\tflexDirection: 'row',\r\n\t\t\t\tWebkitFlexWrap: 'wrap',\r\n\t\t\t\tflexWrap: 'wrap'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<SyncLoader color={color} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import Loadable from 'react-loadable';\r\n\r\nexport default function LazyComponent(opts) {\r\n\treturn Loadable({\r\n\t\tloading: () => null,\r\n\t\tdelay: 200,\r\n\t\t...opts\r\n\t});\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import StarredGrid from './StarredGrid';\r\nimport InputWithAvatar from './InputWithAvatar';\r\nimport LoadingIndicator from './LoadingIndicator';\r\nimport LazyComponent from './LazyComponent';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst StarredGrid = LazyComponent({\r\n\tloader: () => import('./StarredGrid')\r\n});\r\n\r\nconst starsStyles = {\r\n\tloadMoreButton: {\r\n\t\tmargin: '15px',\r\n\t\tmarginTop: '200px'\r\n\t},\r\n\tcenter: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center'\r\n\t}\r\n};\r\n\r\nconst Stars = ({ username, isLoading, avatarUrl, repos, loadMoreRepos }) => {\r\n\tconst loadMore = () => {\r\n\t\tloadMoreRepos(username);\r\n\t};\r\n\tconst hasMoreThanDefaultNumberOfRepos = repos.length >= 30;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InputWithAvatar avatarUrl={avatarUrl} />\r\n\t\t\t{repos.length > 0 && <StarredGrid starredRepos={repos} />}\r\n\t\t\t{isLoading && <LoadingIndicator />}\r\n\t\t\t{hasMoreThanDefaultNumberOfRepos && (\r\n\t\t\t\t<div style={starsStyles.center}>\r\n\t\t\t\t\t<Button onClick={loadMore} style={starsStyles.loadMoreButton}>\r\n\t\t\t\t\t\tLoad More\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nStars.propTypes = {\r\n\tusername: PropTypes.string.isRequired,\r\n\tisLoading: PropTypes.bool.isRequired,\r\n\tavatarUrl: PropTypes.string.isRequired,\r\n\trepos: PropTypes.array.isRequired,\r\n\tloadMoreRepos: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Stars;\r\n","import { connect } from 'react-redux';\r\nimport { loadMoreRepos } from '../actions';\r\nimport Stars from './Stars';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tusername: state.username,\r\n\trepos: state.repos,\r\n\tisLoading: state.isLoading,\r\n\tavatarUrl: state.avatarUrl\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tloadMoreRepos\r\n};\r\n\r\nconst StarsContainer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Stars);\r\n\r\nexport default StarsContainer;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport AppNavBar from './components/AppNavBar';\nimport StarsContainer from './components/StarsContainer';\nimport LazyComponent from './components/LazyComponent';\n\nconst About = LazyComponent({\n\tloader: () => import('./components/About')\n});\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<AppNavBar />\n\t\t\t\t\t<Route exact path=\"/\" component={StarsContainer} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\t\t\tnavigator.serviceWorker\r\n\t\t\t\t.register(swUrl)\r\n\t\t\t\t.then(registration => {\r\n\t\t\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n"],"sourceRoot":""}