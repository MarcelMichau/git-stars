{"version":3,"sources":["constants/actionTypes.js","gitStarsApp.js","actions.js","services/githubService.js","sagas.js","store/configureStore.js","components/AppNavBar.js","components/SearchInput.js","components/SearchInputContainer.js","components/GithubAvatar.js","components/InputWithAvatar.js","components/LoadingIndicator.js","components/LazyComponent.js","components/Stars.js","components/StarsContainer.js","App.js","index.js","registerServiceWorker.js"],"names":["CLEAN_STATE","UPDATE_USER","LOAD_MORE_REPOS","REQUEST_REPOS","RECEIVE_REPOS","REQUEST_AVATAR","RECEIVE_AVATAR","initialState","username","avatarUrl","isLoading","currentPage","repos","gitStarsApp","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","value","concat","toConsumableArray","avatar","requestRepos","receiveRepos","receiveAvatar","avatar_url","githubApi","axios","create","baseURL","headers","Accept","getUserStarredRepos","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","pageCount","wrap","_context","prev","next","get","abrupt","sent","stop","_x","_x2","apply","this","getUserAvatar","_ref2","_callee2","_context2","_x3","fetchRepos","fetchAvatar","loadMoreRepos","rootSaga","result","select","call","put","data","t0","console","log","_marked","_result","_marked2","_context3","_marked3","_context4","takeLatest","_marked4","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","NavbarMenuItem","label","to","activeOnlyWhenExact","react_default","createElement","react_router","path","exact","children","match","Menu","Item","as","Link","active","name","AppNavBar","header","AppNavBar_NavbarMenuItem","SearchInput","resetSearch","updateUser","onSearch","updateAvatar","Form","onSubmit","event","preventDefault","Field","placeholder","onChange","target","Button","primary","content","icon","labelPosition","mapDispatchToProps","SearchInputContainer","connect","ownProps","GithubAvatar","Image","src","size","circular","InputWithAvatar","Container","Grid","Row","centered","Column","width","components_SearchInputContainer","components_GithubAvatar","LoadingIndicator","style","boxSizing","display","WebkitFlex","flex","WebkitFlexDirection","flexDirection","WebkitFlexWrap","flexWrap","WebkitFlexGrow","flexGrow","WebkitFlexShrink","flexShrink","WebkitFlexBasis","flexBasis","height","WebkitAlignItems","alignItems","WebkitJustifyContent","justifyContent","Halogenium","color","LazyComponent","opts","Loadable","loading","delay","StarredGrid","loader","Promise","all","__webpack_require__","e","then","bind","starsStyles","loadMoreButton","margin","marginTop","center","Stars","hasMoreThanDefaultNumberOfRepos","components_InputWithAvatar","starredRepos","components_LoadingIndicator","onClick","StarsContainer","About","App","react_router_dom","components_AppNavBar","component","Component","ReactDOM","render","es","src_App","document","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"sNAAaA,EAAc,cACdC,EAAc,cACdC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAiB,iBCJxBC,EAAe,CACpBC,SAAU,GACVC,UAAW,GACXC,WAAW,EACXC,YAAa,EACbC,MAAO,IAoDOC,MAjDf,WAAmD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAcW,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOC,MACd,KAAKC,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECF,MAAO,GACPD,YAAa,EACbD,WAAW,IAGb,KAAKU,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECN,SAAUU,EAAOK,QAGnB,KAAKH,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECH,YAAaG,EAAMH,YAAc,IAGnC,KAAKS,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECJ,WAAW,IAGb,KAAKU,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECJ,WAAW,EACXE,MAAK,GAAAY,OAAAH,OAAAI,EAAA,EAAAJ,CAAMP,EAAMF,OAAZS,OAAAI,EAAA,EAAAJ,CAAsBH,EAAON,UAGpC,KAAKQ,EACJ,OAAON,EAER,KAAKM,EACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHP,EADJ,CAECL,UAAWS,EAAOQ,SAGpB,QACC,OAAOZ,6BCvCGa,EAAe,SAAAnB,GAAQ,MAAK,CACxCW,KAAMC,EACNG,MAAOf,IAGKoB,EAAe,SAACpB,EAAUI,GAAX,MAAsB,CACjDO,KAAMC,EACNR,MAAOA,IAQKiB,EAAgB,SAACrB,EAAUkB,GAAX,MAAuB,CACnDP,KAAMC,EACNM,OAAQA,EAAOI,+BC/BVC,SAAYC,EAAMC,OAAO,CAC9BC,QAAS,0BACTC,QAAS,CAAEC,OAAQ,yCAGPC,EAAmB,eAAAC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAC,EAAAC,KAAG,SAAAC,EAAOnC,EAAUoC,GAAjB,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC5BjB,EAAUkB,IAAV,SAAAzB,OAAuBhB,EAAvB,kBAAAgB,OAAgDoB,IADpB,cAAAE,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,SAAAT,MAAH,gBAAAU,EAAAC,GAAA,OAAAhB,EAAAiB,MAAAC,KAAAzC,YAAA,GAGnB0C,EAAa,eAAAC,EAAArC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAC,EAAAC,KAAG,SAAAiB,EAAMnD,GAAN,OAAAgC,EAAAC,EAAAI,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACtBjB,EAAUkB,IAAV,SAAAzB,OAAuBhB,IADD,cAAAoD,EAAAV,OAAA,SAAAU,EAAAT,MAAA,wBAAAS,EAAAR,SAAAO,MAAH,gBAAAE,GAAA,OAAAH,EAAAH,MAAAC,KAAAzC,YAAA,cCLhB+C,cAcAC,cAQAC,cAQeC,GA9BzB,SAAUH,EAAW5C,GAArB,IAAAJ,EAAAoD,EAAA,OAAA1B,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEgB,OAFhBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEsBmB,cAFtB,OAGiB,OADTrD,EAFRgC,EAAAK,KAAAL,EAAAE,KAAA,EAGuBoB,YACpB/B,EACAnB,EAAOK,MACPT,EAAMH,aANT,OAQE,OALMuD,EAHRpB,EAAAK,KAAAL,EAAAE,KAAA,EAQQqB,YAAIzC,EAAaV,EAAOK,MAAO2C,EAAOI,OAR9C,OAAAxB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,SAUE0B,QAAQC,IAAR3B,EAAAyB,IAVF,yBAAAzB,EAAAM,SAAAsB,EAAA,eAcA,SAAUX,EAAY7C,GAAtB,IAAAyD,EAAA,OAAAnC,EAAAC,EAAAI,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAEiB,OAFjBY,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAEuBoB,YAAKX,EAAevC,EAAOK,OAFlD,OAGE,OADM2C,EAFRN,EAAAT,KAAAS,EAAAZ,KAAA,EAGQqB,YAAIxC,EAAcX,EAAOK,MAAO2C,EAAOI,OAH/C,OAAAV,EAAAZ,KAAA,gBAAAY,EAAAb,KAAA,EAAAa,EAAAW,GAAAX,EAAA,SAKEY,QAAQC,IAARb,EAAAW,IALF,yBAAAX,EAAAR,SAAAwB,EAAA,cAQA,SAAUZ,EAAc9C,GAAxB,OAAAsB,EAAAC,EAAAI,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAEE,OAFF6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAEQqB,YAAI1C,EAAaT,EAAOK,QAFhC,OAAAsD,EAAA7B,KAAA,eAAA6B,EAAA9B,KAAA,EAAA8B,EAAAN,GAAAM,EAAA,SAIEL,QAAQC,IAARI,EAAAN,IAJF,wBAAAM,EAAAzB,SAAA0B,EAAA,cAQe,SAAUb,IAAV,OAAAzB,EAAAC,EAAAI,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OACd,OADc+B,EAAA/B,KAAA,EACRgC,YAAW5D,EAA2B0C,GAD9B,OAEd,OAFciB,EAAA/B,KAAA,EAERgC,YAAW5D,EAA4B2C,GAF/B,OAGd,OAHcgB,EAAA/B,KAAA,EAGRgC,YAAW5D,EAA6B4C,GAHhC,wBAAAe,EAAA3B,SAAA6B,GC9Bf,IAAMC,EAAiBC,cAEjBC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACb5E,EACAuE,EAAiBM,YAAgBR,KAGlCA,EAAeS,IAAI1B,GAEJuB,8ECXTI,EAAiB,SAAAtD,GAAA,IAAGuD,EAAHvD,EAAGuD,MAAOC,EAAVxD,EAAUwD,GAAIC,EAAdzD,EAAcyD,oBAAd,OACtBC,EAAAvD,EAAAwD,cAACC,EAAA,EAAD,CACCC,KAAML,EACNM,MAAOL,EACPM,SAAU,SAAA3C,GAAA,IAAG4C,EAAH5C,EAAG4C,MAAH,OACTN,EAAAvD,EAAAwD,cAACM,EAAA,EAAKC,KAAN,CAAWC,GAAIC,IAAMZ,GAAIA,EAAIa,SAAQL,EAAsBM,KAAMf,GAC/DA,OAcUgB,EARG,kBACjBb,EAAAvD,EAAAwD,cAACM,EAAA,EAAD,KACCP,EAAAvD,EAAAwD,cAACM,EAAA,EAAKC,KAAN,CAAWM,QAAM,GAAjB,aACAd,EAAAvD,EAAAwD,cAACc,EAAD,CAAgBhB,qBAAqB,EAAMD,GAAG,IAAID,MAAM,SACxDG,EAAAvD,EAAAwD,cAACc,EAAD,CAAgBjB,GAAG,SAASD,MAAM,gCCiCrBmB,GAjDK,SAAA1E,GAMd,IALL2E,EAKK3E,EALL2E,YACAzG,EAIK8B,EAJL9B,SACA0G,EAGK5E,EAHL4E,WACAC,EAEK7E,EAFL6E,SACAC,EACK9E,EADL8E,aAaA,OACCpB,EAAAvD,EAAAwD,cAACoB,GAAA,EAAD,CAAMC,SARY,SAAAC,GAClBA,EAAMC,iBACNP,IACAE,EAAS3G,GACT4G,EAAa5G,KAKZwF,EAAAvD,EAAAwD,cAACoB,GAAA,EAAKI,MAAN,KACCzB,EAAAvD,EAAAwD,cAAA,gCACAD,EAAAvD,EAAAwD,cAAA,SACC9E,KAAK,OACLyF,KAAK,kBACLc,YAAY,6BACZnG,MAAOf,EACPmH,SApBiB,SAAAJ,GACpBL,EAAWK,EAAMK,OAAOrG,WAsBvByE,EAAAvD,EAAAwD,cAAC4B,GAAA,EAAD,CACCC,SAAO,EACP3G,KAAK,SACL4G,QAAQ,gBACRC,KAAK,SACLC,cAAc,YC1BZC,GAAqB,CAC1BjB,YNZyB,SAAA1F,GAAK,MAAK,CACnCJ,KAAMC,IMYN8F,WNT6B,SAAA3F,GAAK,MAAK,CACvCJ,KAAMC,EACNG,UMQA4F,SAAUxF,EACVyF,aNS4B,SAAA5G,GAAQ,MAAK,CACzCW,KAAMC,EACNG,MAAOf,KMHO2H,GALcC,YAXL,SAACtH,EAAOuH,GAAR,MAAsB,CAC7C7H,SAAUM,EAAMN,WAYhB0H,GAF4BE,CAG3BpB,cCXasB,GARM,SAAAhG,GAAA,IAAG7B,EAAH6B,EAAG7B,UAAH,OACpBuF,EAAAvD,EAAAwD,cAAA,YAAOxF,GAAauF,EAAAvD,EAAAwD,cAACsC,GAAA,EAAD,CAAOC,IAAK/H,EAAWgI,KAAK,OAAOC,UAAQ,0BCoBjDC,GAnBS,SAAArG,GAAA,IAAG7B,EAAH6B,EAAG7B,UAAH,OACvBuF,EAAAvD,EAAAwD,cAAC2C,GAAA,EAAD,KACC5C,EAAAvD,EAAAwD,cAAC4C,GAAA,EAAD,KACC7C,EAAAvD,EAAAwD,cAAC4C,GAAA,EAAKC,IAAN,CAAUC,UAAQ,GACjB/C,EAAAvD,EAAAwD,cAAC4C,GAAA,EAAKG,OAAN,CAAaC,MAAO,IACnBjD,EAAAvD,EAAAwD,cAACiD,GAAD,OAEDlD,EAAAvD,EAAAwD,cAAC4C,GAAA,EAAKG,OAAN,CAAaC,MAAO,GACnBjD,EAAAvD,EAAAwD,cAACkD,GAAD,CAAc1I,UAAWA,mBC+Bf2I,GA1CU,WAsBxB,OACCpD,EAAAvD,EAAAwD,cAAA,OACCoD,MAAO,CACNC,UAAW,aACXC,QAAS,OACTC,WAAY,WACZC,KAAM,WACNC,oBAAqB,MACrBC,cAAe,MACfC,eAAgB,OAChBC,SAAU,SAGX7D,EAAAvD,EAAAwD,cAAA,OAAKoD,MAhCO,CACbE,QAAS,OACTC,WAAY,WACZC,KAAM,WACNC,oBAAqB,SACrBC,cAAe,SACfG,eAAgB,EAChBC,SAAU,EACVC,iBAAkB,EAClBC,WAAY,EACZC,gBAAiB,MACjBC,UAAW,MACXC,OAAQ,QACRC,iBAAkB,SAClBC,WAAY,SACZC,qBAAsB,SACtBC,eAAgB,WAiBdxE,EAAAvD,EAAAwD,cAACwE,GAAA,WAAD,CAAYC,MAnCD,oCCFA,SAASC,GAAcC,GACrC,OAAOC,KAASxJ,OAAAC,EAAA,EAAAD,CAAA,CACfyJ,QAAS,kBAAM,MACfC,MAAO,KACJH,ICEL,IAAMI,GAAcL,GAAc,CACjCM,OAAQ,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,cAGTC,GAAc,CACnBC,eAAgB,CACfC,OAAQ,OACRC,UAAW,SAEZC,OAAQ,CACPrC,QAAS,OACTiB,eAAgB,WAkCHqB,GA9BD,SAAAvJ,GAA8D,IAA3D9B,EAA2D8B,EAA3D9B,SAAUE,EAAiD4B,EAAjD5B,UAAWD,EAAsC6B,EAAtC7B,UAAWG,EAA2B0B,EAA3B1B,MAAOoD,EAAoB1B,EAApB0B,cAIjD8H,EAAkClL,EAAMI,QAAU,GAExD,OACCgF,EAAAvD,EAAAwD,cAAA,WACCD,EAAAvD,EAAAwD,cAAC8F,GAAD,CAAiBtL,UAAWA,IAC3BG,EAAMI,OAAS,GAAKgF,EAAAvD,EAAAwD,cAAC+E,GAAD,CAAagB,aAAcpL,IAC/CF,GAAasF,EAAAvD,EAAAwD,cAACgG,GAAD,MACbH,GACA9F,EAAAvD,EAAAwD,cAAA,OAAKoD,MAAOmC,GAAYI,QACvB5F,EAAAvD,EAAAwD,cAAC4B,GAAA,EAAD,CAAQqE,QAZK,WAChBlI,EAAcxD,IAWgB6I,MAAOmC,GAAYC,gBAA9C,gBCzBCvD,GAAqB,CAC1BlE,cZD4B,SAAAxD,GAAQ,MAAK,CACzCW,KAAMC,EACNG,MAAOf,KYOO2L,GALQ/D,YAXC,SAACtH,EAAOuH,GAAR,MAAsB,CAC7C7H,SAAUM,EAAMN,SAChBI,MAAOE,EAAMF,MACbF,UAAWI,EAAMJ,UACjBD,UAAWK,EAAML,YASjByH,GAFsBE,CAGrByD,ICZIO,GAAQzB,GAAc,CAC3BM,OAAQ,kBAAMG,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,cAiBAc,oLAZb,OACCrG,EAAAvD,EAAAwD,cAACqG,EAAA,EAAD,KACCtG,EAAAvD,EAAAwD,cAAA,WACCD,EAAAvD,EAAAwD,cAACsG,EAAD,MACAvG,EAAAvD,EAAAwD,cAACC,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAIqG,UAAWL,KACjCnG,EAAAvD,EAAAwD,cAACC,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,SAASqG,UAAWJ,cAPzBK,oBCFlBC,IAASC,OACR3G,EAAAvD,EAAAwD,cAAC2G,EAAA,EAAD,CAAUpH,MAAOA,GAChBQ,EAAAvD,EAAAwD,cAAC4G,GAAD,OAEDC,SAASC,eAAe,SCDqB,kBAAmBC,WAC/D3H,OAAO4H,iBAAiB,OAAQ,WAC/B,IAAMC,EAAK,GAAA1L,OAAM2L,aAAN,sBACXH,UAAUI,cACRC,SAASH,GACT5B,KAAK,SAAAgC,GACLA,EAAaC,cAAgB,WAC5B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACD,cAA3BF,EAAiB1M,QAChBkM,UAAUI,cAAcO,WAK3BnJ,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMhBmJ,MAAM,SAAAC,GACNrJ,QAAQqJ,MAAM,4CAA6CA","file":"static/js/main.e44088b9.chunk.js","sourcesContent":["export const CLEAN_STATE = 'CLEAN_STATE';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const LOAD_MORE_REPOS = 'LOAD_MORE_REPOS';\r\nexport const REQUEST_REPOS = 'REQUEST_REPOS';\r\nexport const RECEIVE_REPOS = 'RECEIVE_REPOS';\r\nexport const REQUEST_AVATAR = 'REQUEST_AVATAR';\r\nexport const RECEIVE_AVATAR = 'RECEIVE_AVATAR';\r\n","import * as actionTypes from './constants/actionTypes';\r\n\r\nconst initialState = {\r\n\tusername: '',\r\n\tavatarUrl: '',\r\n\tisLoading: false,\r\n\tcurrentPage: 1,\r\n\trepos: []\r\n};\r\n\r\nfunction gitStarsApp(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.CLEAN_STATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trepos: [],\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\tisLoading: false\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.UPDATE_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusername: action.value\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.LOAD_MORE_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: state.currentPage + 1\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.REQUEST_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.RECEIVE_REPOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\trepos: [...state.repos, ...action.repos]\r\n\t\t\t};\r\n\r\n\t\tcase actionTypes.REQUEST_AVATAR:\r\n\t\t\treturn state;\r\n\r\n\t\tcase actionTypes.RECEIVE_AVATAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tavatarUrl: action.avatar\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default gitStarsApp;\r\n","import * as actionTypes from './constants/actionTypes';\r\n\r\nexport const cleanState = value => ({\r\n\ttype: actionTypes.CLEAN_STATE\r\n});\r\n\r\nexport const updateUsername = value => ({\r\n\ttype: actionTypes.UPDATE_USER,\r\n\tvalue\r\n});\r\n\r\nexport const loadMoreRepos = username => ({\r\n\ttype: actionTypes.LOAD_MORE_REPOS,\r\n\tvalue: username\r\n});\r\n\r\nexport const requestRepos = username => ({\r\n\ttype: actionTypes.REQUEST_REPOS,\r\n\tvalue: username\r\n});\r\n\r\nexport const receiveRepos = (username, repos) => ({\r\n\ttype: actionTypes.RECEIVE_REPOS,\r\n\trepos: repos\r\n});\r\n\r\nexport const requestAvatar = username => ({\r\n\ttype: actionTypes.REQUEST_AVATAR,\r\n\tvalue: username\r\n});\r\n\r\nexport const receiveAvatar = (username, avatar) => ({\r\n\ttype: actionTypes.RECEIVE_AVATAR,\r\n\tavatar: avatar.avatar_url\r\n});\r\n","import axios from 'axios';\r\n\r\nconst githubApi = axios.create({\r\n\tbaseURL: 'https://api.github.com/',\r\n\theaders: { Accept: 'application/vnd.github.v3.star+json' }\r\n});\r\n\r\nexport const getUserStarredRepos = async (username, pageCount) =>\r\n\tawait githubApi.get(`users/${username}/starred?page=${pageCount}`);\r\n\r\nexport const getUserAvatar = async username =>\r\n\tawait githubApi.get(`users/${username}`);\r\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\r\nimport * as actionTypes from './constants/actionTypes';\r\nimport { requestRepos, receiveRepos, receiveAvatar } from './actions';\r\nimport { getUserStarredRepos, getUserAvatar } from './services/githubService';\r\n\r\nfunction* fetchRepos(action) {\r\n\ttry {\r\n\t\tconst state = yield select();\r\n\t\tconst result = yield call(\r\n\t\t\tgetUserStarredRepos,\r\n\t\t\taction.value,\r\n\t\t\tstate.currentPage\r\n\t\t);\r\n\t\tyield put(receiveRepos(action.value, result.data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nfunction* fetchAvatar(action) {\r\n\ttry {\r\n\t\tconst result = yield call(getUserAvatar, action.value);\r\n\t\tyield put(receiveAvatar(action.value, result.data));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\nfunction* loadMoreRepos(action) {\r\n\ttry {\r\n\t\tyield put(requestRepos(action.value));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield takeLatest(actionTypes.REQUEST_REPOS, fetchRepos);\r\n\tyield takeLatest(actionTypes.REQUEST_AVATAR, fetchAvatar);\r\n\tyield takeLatest(actionTypes.LOAD_MORE_REPOS, loadMoreRepos);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport gitStarsApp from '../gitStarsApp';\r\nimport rootSaga from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n\tgitStarsApp,\r\n\tcomposeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nconst NavbarMenuItem = ({ label, to, activeOnlyWhenExact }) => (\r\n\t<Route\r\n\t\tpath={to}\r\n\t\texact={activeOnlyWhenExact}\r\n\t\tchildren={({ match }) => (\r\n\t\t\t<Menu.Item as={Link} to={to} active={match ? true : false} name={label}>\r\n\t\t\t\t{label}\r\n\t\t\t</Menu.Item>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nconst AppNavBar = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item header>Git Stars</Menu.Item>\r\n\t\t<NavbarMenuItem activeOnlyWhenExact={true} to=\"/\" label=\"Home\" />\r\n\t\t<NavbarMenuItem to=\"/about\" label=\"About\" />\r\n\t</Menu>\r\n);\r\n\r\nexport default AppNavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst SearchInput = ({\r\n\tresetSearch,\r\n\tusername,\r\n\tupdateUser,\r\n\tonSearch,\r\n\tupdateAvatar\r\n}) => {\r\n\tconst handleChange = event => {\r\n\t\tupdateUser(event.target.value);\r\n\t};\r\n\r\n\tconst submitForm = event => {\r\n\t\tevent.preventDefault();\r\n\t\tresetSearch();\r\n\t\tonSearch(username);\r\n\t\tupdateAvatar(username);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={submitForm}>\r\n\t\t\t<Form.Field>\r\n\t\t\t\t<label>Github Username</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"github-username\"\r\n\t\t\t\t\tplaceholder=\"Enter your Github Username\"\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Field>\r\n\t\t\t<Button\r\n\t\t\t\tprimary\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tcontent=\"Search GitHub\"\r\n\t\t\t\ticon=\"search\"\r\n\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t/>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nSearchInput.propTypes = {\r\n\tresetSearch: PropTypes.func.isRequired,\r\n\tusername: PropTypes.string.isRequired,\r\n\tupdateUser: PropTypes.func.isRequired,\r\n\tonSearch: PropTypes.func.isRequired,\r\n\tupdateAvatar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import { connect } from 'react-redux';\r\nimport SearchInput from './SearchInput';\r\nimport {\r\n\tcleanState,\r\n\tupdateUsername,\r\n\trequestRepos,\r\n\trequestAvatar\r\n} from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tusername: state.username\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tresetSearch: cleanState,\r\n\tupdateUser: updateUsername,\r\n\tonSearch: requestRepos,\r\n\tupdateAvatar: requestAvatar\r\n};\r\n\r\nconst SearchInputContainer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SearchInput);\r\n\r\nexport default SearchInputContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'semantic-ui-react';\r\n\r\nconst GithubAvatar = ({ avatarUrl }) => (\r\n\t<span>{avatarUrl && <Image src={avatarUrl} size=\"tiny\" circular />}</span>\r\n);\r\n\r\nGithubAvatar.propTypes = {\r\n\tavatarUrl: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GithubAvatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SearchInputContainer from './SearchInputContainer';\r\nimport GithubAvatar from './GithubAvatar';\r\nimport { Container, Grid } from 'semantic-ui-react';\r\n\r\nconst InputWithAvatar = ({ avatarUrl }) => (\r\n\t<Container>\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row centered>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<SearchInputContainer />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={2}>\r\n\t\t\t\t\t<GithubAvatar avatarUrl={avatarUrl} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t</Container>\r\n);\r\n\r\nInputWithAvatar.propTypes = {\r\n\tavatarUrl: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InputWithAvatar;\r\n","import React from 'react';\r\nimport { SyncLoader } from 'halogenium';\r\n\r\nconst LoadingIndicator = () => {\r\n\tconst color = '#2185D0';\r\n\r\n\tconst style = {\r\n\t\tdisplay: 'flex',\r\n\t\tWebkitFlex: '0 1 auto',\r\n\t\tflex: '0 1 auto',\r\n\t\tWebkitFlexDirection: 'column',\r\n\t\tflexDirection: 'column',\r\n\t\tWebkitFlexGrow: 1,\r\n\t\tflexGrow: 1,\r\n\t\tWebkitFlexShrink: 0,\r\n\t\tflexShrink: 0,\r\n\t\tWebkitFlexBasis: '25%',\r\n\t\tflexBasis: '25%',\r\n\t\theight: '200px',\r\n\t\tWebkitAlignItems: 'center',\r\n\t\talignItems: 'center',\r\n\t\tWebkitJustifyContent: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tboxSizing: 'border-box',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tWebkitFlex: '0 1 auto',\r\n\t\t\t\tflex: '0 1 auto',\r\n\t\t\t\tWebkitFlexDirection: 'row',\r\n\t\t\t\tflexDirection: 'row',\r\n\t\t\t\tWebkitFlexWrap: 'wrap',\r\n\t\t\t\tflexWrap: 'wrap'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<SyncLoader color={color} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import Loadable from 'react-loadable';\r\n\r\nexport default function LazyComponent(opts) {\r\n\treturn Loadable({\r\n\t\tloading: () => null,\r\n\t\tdelay: 200,\r\n\t\t...opts\r\n\t});\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import StarredGrid from './StarredGrid';\r\nimport InputWithAvatar from './InputWithAvatar';\r\nimport LoadingIndicator from './LoadingIndicator';\r\nimport LazyComponent from './LazyComponent';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst StarredGrid = LazyComponent({\r\n\tloader: () => import('./StarredGrid')\r\n});\r\n\r\nconst starsStyles = {\r\n\tloadMoreButton: {\r\n\t\tmargin: '15px',\r\n\t\tmarginTop: '200px'\r\n\t},\r\n\tcenter: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center'\r\n\t}\r\n};\r\n\r\nconst Stars = ({ username, isLoading, avatarUrl, repos, loadMoreRepos }) => {\r\n\tconst loadMore = () => {\r\n\t\tloadMoreRepos(username);\r\n\t};\r\n\tconst hasMoreThanDefaultNumberOfRepos = repos.length >= 30;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InputWithAvatar avatarUrl={avatarUrl} />\r\n\t\t\t{repos.length > 0 && <StarredGrid starredRepos={repos} />}\r\n\t\t\t{isLoading && <LoadingIndicator />}\r\n\t\t\t{hasMoreThanDefaultNumberOfRepos && (\r\n\t\t\t\t<div style={starsStyles.center}>\r\n\t\t\t\t\t<Button onClick={loadMore} style={starsStyles.loadMoreButton}>\r\n\t\t\t\t\t\tLoad More\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nStars.propTypes = {\r\n\tusername: PropTypes.string.isRequired,\r\n\tisLoading: PropTypes.bool.isRequired,\r\n\tavatarUrl: PropTypes.string.isRequired,\r\n\trepos: PropTypes.array.isRequired,\r\n\tloadMoreRepos: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Stars;\r\n","import { connect } from 'react-redux';\r\nimport { loadMoreRepos } from '../actions';\r\nimport Stars from './Stars';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tusername: state.username,\r\n\trepos: state.repos,\r\n\tisLoading: state.isLoading,\r\n\tavatarUrl: state.avatarUrl\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tloadMoreRepos\r\n};\r\n\r\nconst StarsContainer = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Stars);\r\n\r\nexport default StarsContainer;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport AppNavBar from './components/AppNavBar';\nimport StarsContainer from './components/StarsContainer';\nimport LazyComponent from './components/LazyComponent';\n\nconst About = LazyComponent({\n\tloader: () => import('./components/About')\n});\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<AppNavBar />\n\t\t\t\t\t<Route exact path=\"/\" component={StarsContainer} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\t\t\tnavigator.serviceWorker\r\n\t\t\t\t.register(swUrl)\r\n\t\t\t\t.then(registration => {\r\n\t\t\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n"],"sourceRoot":""}